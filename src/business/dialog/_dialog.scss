@import '../../../angular-core/styles/common/colors';
@import '../../../angular-core/styles/common/mediaqueries';

$dialog-bgcolor: $sbbColorWhite;
$dialog-border-color: $sbbColorCloud;
$dialog-x-padding-mobile: 16;
$dialog-x-padding-tablet: 16;
$dialog-x-padding: 16;
$dialog-y-padding-mobile: 24;
$dialog-y-padding: 24;

$dialog-footer-height-mobile: 52;
$dialog-footer-height-tablet: 52;
$dialog-header-height: 52;

@mixin dialogContentHeight($mode: default) {
  @if ($mode == default) {
    max-height: 100vh;
  } @else if ($mode == withHeader) {
    max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset(withHeader))});
  } @else {
    max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset($mode, mobile))});

    @include mq($from: tabletPortrait) {
      max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset($mode, tabletPortrait))});
    }
  }
}

@function getContentMaxHeightOffset($mode, $viewport: mobile) {
  @if ($viewport == mobile) and ($mode == withHeaderAndFooter) {
    @return $dialog-header-height + $dialog-footer-height-mobile;
  } @else if ($viewport == tabletPortrait) and ($mode == withHeaderAndFooter) {
    @return $dialog-header-height + $dialog-footer-height-tablet;
  } @else if ($viewport == mobile) and ($mode == withHeader) {
    @return $dialog-header-height;
  } @else if ($viewport == mobile) and ($mode == withFooter) {
    @return $dialog-footer-height-mobile;
  } @else if ($viewport == tabletPortrait) and ($mode == withFooter) {
    @return $dialog-footer-height-tablet;
  }
}
