@import '../../../angular-core/styles/common/variables';
@import '../../../angular-core/styles/common/colors';
@import '../../../angular-core/styles/common/functions';
@import '../../../angular-core/styles/common/mediaqueries';
@import '../../../angular-core/styles/common/mixins';

$toggleOptionIconSize: 31;
$toggleOptionButtonBg: $sbbColorMilk;
$toggleOptionButtonColor: $sbbColorGrey;
$toggleOptionRadius: 2;
$toggleOptionButtonPadding: pxToEm(8) pxToEm(23) pxToEm(9);
$toggleOptionInfoTextFontSize: 13;
$toggleOptionButtonBgSelected: $sbbColorWhite;
$toggleOptionButtonBorderSelected: $sbbColorBlack;
$toggleOptionButtonColorSelected: $sbbColorBlack;
$toggleOptionButtonMinHeight: pxToEm(65);
$toggleOptionInfoTextTransition: max-height 0.25s linear, opacity 0.25s ease;
$toggleOptionContentTransition: opacity 0.25s ease, visibility 0.25s ease, padding 0.2s ease,
  max-height 0.2s ease;
$toggleOptionContentPadding: 24;
$toggleOptionContentBg: $sbbColorWhite;

@mixin toggleContainer() {
  display: flex;
  width: 100%;

  @include mq($from: desktop4k) {
    font-size: toEm(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: toEm(1 * $scalingFactor5k);
  }
}

@mixin toggleOption() {
  flex: 1;
}

@mixin toggleOptionButton() {
  display: flex;
  background-color: $toggleOptionButtonBg;
  color: $toggleOptionButtonColor;
  border-radius: pxToEm(2);
  padding: $toggleOptionButtonPadding;
  line-height: 1.5;
  border: pxToEm(1) solid transparent;
  min-height: $toggleOptionButtonMinHeight;

  &-inner {
    display: table;
    margin: auto;
  }

  &:hover {
    cursor: pointer;
  }
}

@mixin toggleOptionLabelWrapper() {
  @extend %tableCell;
  text-align: center;
}

@mixin toggleOptionIcon() {
  @include svgIconColor($toggleOptionButtonColor);
  display: inline-block;
  vertical-align: middle;
  width: pxToEm($toggleOptionIconSize);
  height: pxToEm($toggleOptionIconSize);
}

@mixin toggleOptionLabel() {
  @extend %colorBlockifyInline;
  vertical-align: middle;
}

@mixin toggleOptionInfoText() {
  @extend %colorBlockify;
  font-size: pxToEm($toggleOptionInfoTextFontSize);
  max-height: 3em;
  opacity: 1;
  overflow: hidden;
  transition: $toggleOptionInfoTextTransition;
}

@mixin toggleOptionContent() {
  background-color: $toggleOptionContentBg;
  width: 200%;
  float: left;
  max-height: 0;
  visibility: hidden;
  opacity: 0;
  transition: $toggleOptionContentTransition;
  padding-left: pxToEm($toggleOptionContentPadding);
  padding-right: pxToEm($toggleOptionContentPadding);
  margin-top: pxToEm(-2);
  position: relative;
  z-index: 2;
  border: pxToEm(1) solid $sbbColorBlack;
  border-top-color: transparent;

  &::before,
  &::after {
    content: '';
    position: absolute;
    height: 0;
    top: pxToEm(-1);
  }

  &::before {
    width: 50%;
    border-bottom: pxToEm(1) solid $sbbColorSilver;
    left: 0;
  }

  &::after {
    width: calc(50% + #{pxToEm(1)});
    border-bottom: pxToEm(1) solid $sbbColorBlack;
    right: 0;
  }
}

@mixin toggleOptionContentLast() {
  float: right;

  &::before {
    left: auto;
    right: 0;
  }

  &::after {
    right: auto;
    left: 0;
  }
}

@mixin toggleOptionSelected() {
  .sbb-toggle-option-button {
    background-color: $toggleOptionButtonBgSelected;
    border-color: $toggleOptionButtonBorderSelected;
    color: $toggleOptionButtonColorSelected;

    &-icon {
      @include svgIconColor($toggleOptionButtonColorSelected);
    }

    &-info-text {
      opacity: 0;
      max-height: 0;
    }
  }

  .sbb-toggle-option-content {
    padding: pxToEm($toggleOptionContentPadding);
    max-height: pxToEm(600);
    visibility: visible;
    opacity: 1;
  }
}

@mixin toggleOptionHasIcon() {
  .sbb-toggle-option-button {
    &-label {
      max-width: calc(100% - #{pxToEm($toggleOptionIconSize)});
      text-align: left;
      padding-left: 0.5em;
    }
  }
}

%tableCell {
  display: table-cell;
  vertical-align: middle;
}

%colorBlockify {
  display: block;
  color: inherit;
}

%colorBlockifyInline {
  display: inline-block;
  color: inherit;
}
