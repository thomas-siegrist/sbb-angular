@mixin loadingBase() {
  display: flex;
  height: $rectHeight * 5;
  padding-top: $rectHeight * 2;

  & > div {
    width: $totalWidth;
    height: $rectHeight;
    margin: 0 auto;
    perspective: $perspective;
    transform-origin: center;
    transform: translate3d(-3em, 0, 0);
    backface-visibility: hidden;

    & > div {
      position: relative;

      // rotate whole preloader to give it skewed look
      transform: rotateY(50deg) translateZ(1em);
      transform-origin: right;
      backface-visibility: hidden;

      & > div {
        position: relative;
        display: flex;
        animation: loading_container $time linear infinite;

        & > div {
          width: $rectWidth;
          height: $rectHeight;
          margin-right: $gutterWidth;
          background: $sbbColorRed;

          // disable backface visibility
          backface-visibility: hidden;

          // to remove jagged edges on transformed objects
          outline: 1px solid transparent;

          @for $i from 1 through $numberOfItems {
            &:nth-child(#{$i}) {
              animation: loading_rectangle#{$i} $time linear infinite;
            }
          }

          &:last-child {
            margin-right: 0;
          }
        }
      }
    }
  }

  @each $size, $width, $height, $gutterWidth, $perspective in $sizes {
    &.sbb-loading-#{$size} {
      height: $height * 5;
      padding-top: $height * 2;

      & > div {
        width: ($width + $gutterWidth) * $numberOfItems - $gutterWidth;
        height: $height;
        perspective: $perspective;

        & > div > div {
          animation: loading_container_#{$size} $time linear infinite;

          & > div {
            width: $width;
            height: $height;
            margin-right: $gutterWidth;

            @if $size == 'tiny' {
              transform: translate3d(-$gutterWidth / 2, 0, 0);
            }
          }
        }
      }
    }
  }

  &[inline] {
    display: inline-flex;
    padding-left: 1em;
    margin-right: -2em;
    height: auto;
    padding-top: 0;
    vertical-align: middle;
  }
}

@mixin setLoadingArea($mode: default) {
  @if ($mode == default) {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.6);
    z-index: 999;

    > div {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  } @else if ($mode == fullbox) {
    position: absolute;
  } @else if ($mode == fullscreen) {
    position: fixed;
  }
}
