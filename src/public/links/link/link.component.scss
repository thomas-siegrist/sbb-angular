@import '../../../core/styles/common';

.sbb-link {
  word-break: break-word;
  display: block;
  position: relative;
  margin: 1em 0 2em;
  padding-left: 0;
  padding-right: toEm(70 / $sizeFontDefault);
  hyphens: auto;
  transition: padding-left $linkiconAnimation, padding-right $linkiconAnimation,
    color $linkiconAnimation;
  text-decoration: none !important;

  .sbb-svgsprite-icon {
    @include svgIconColor($sbbColorCallToAction);
    line-height: 1.25;
    position: absolute;
    width: toPx(24);
    height: toPx(24);
    margin-left: toPx(8) !important;
    backface-visibility: hidden;
    pointer-events: none;
    opacity: 1;
    top: 50%;
    transform: translate(0px, -50%);
    transition: opacity $linkiconAnimation, transform $linkiconAnimation, fill $linkiconAnimation;

    @include mq($from: desktop4k) {
      width: toPx(24 * $scalingFactor4k);
      height: toPx(24 * $scalingFactor4k);
      margin-left: toPx(8 * $scalingFactor4k) !important;
    }

    @include mq($from: desktop5k) {
      width: toPx(24 * $scalingFactor5k);
      height: toPx(24 * $scalingFactor5k);
      top: 25%;
      transform: translate(0px, -25%);
      margin-left: toPx(8 * $scalingFactor5k) !important;
    }
  }

  &.sbb-link-center {
    text-align: center;
    padding-right: 0;
  }

  &:not(.sbb-link-stretch) {
    .sbb-svgsprite-icon:first-of-type {
      margin-left: pxToEm(-30, $sizeFontDefault) !important;
      opacity: 0;
      transform: translate(pxToEm(-26, $sizeFontDefault), -50%);
      @include mq($from: desktop5k) {
        transform: translate(pxToEm(-26, $sizeFontDefault), -25%);
      }
    }
    &:hover,
    &:focus {
      padding-left: pxToEm(30, $sizeFontDefault);
      padding-right: pxToEm(40, $sizeFontDefault);
    
      .sbb-svgsprite-icon:first-of-type {
        opacity: 1;
        margin-right: toPx(8);
        transform: translate(0, -50%);
        @include mq($from: desktop5k) {
          transform: translate(0, -25%);
        }
      }
    
      .sbb-svgsprite-icon:last-of-type {
        opacity: 0;
        transform: translateX(pxToEm(26), -50%);
        @include mq($from: desktop5k) {
          transform: translateX(pxToEm(26), -50%);
        }
      }
    
      &.sbb-link-center {
        padding-right: 0;
      }
    }
  }

  &.sbb-link-form {
    color: $sbbColorGrey;
    .sbb-svgsprite-icon {
      @include svgIconColor($sbbColorGrey);
    }
    &:hover,
    &:focus {
      color: $sbbColorCallToActionHover;
      .sbb-svgsprite-icon {
        @include svgIconColor($sbbColorCallToActionHover);
      }
    }
  }

  &.sbb-link-stretch {
    .sbb-svgsprite-icon {
      right: 0;
    }
    &:hover,
    &:focus {
      color: $sbbColorCallToActionHover;
      .sbb-svgsprite-icon {
        @include svgIconColor($sbbColorCallToActionHover);
      }
    }
  }
}
