@import '../../../angular-core/styles/common/variants';
@import '../../../angular-core/styles/common/colors';
@import '../../../angular-core/styles/common/mixins';

$dropdownPaddingBottom: 14px;
$autocompleteOptionHoverColor: $sbbColorRed;
$autocompleteOptionActiveColor: $sbbColorRed;
$autocompletePaddingTop: 14px;
$autocompletePaddingX: 16px;
$autocompletePaddingBottom: 18px;
$autocompleteHighlightTextBold: $fontSbbBold;
$autocompleteHoverColor: $sbbColorBlack;
$optionMultipleCheckboxPaddingLeft: 16;
$optionMultipleNoCheckboxPaddingLeft: 14;

$optionSelectedBarHeight: 22;
$optionSelectedBarWidth: 1;
$optionSelectedBarTop: 3;
$optionSelectedBarTopFirst: 6;

@if $sbbBusiness {
  $autocompleteOptionHoverColor: $sbbColorRed125;
  $autocompleteOptionActiveColor: $sbbColorRed125;
  $dropdownPaddingBottom: 8px;
  $autocompletePaddingTop: 8px;
  $autocompletePaddingX: 8px;
  $autocompletePaddingBottom: 8px;
  $optionMultipleCheckboxPaddingLeft: 8;
  $optionMultipleNoCheckboxPaddingLeft: 8;
}

$autocompletePadding: $autocompletePaddingTop $autocompletePaddingX $autocompletePaddingBottom;

@mixin optionBorderLeft($color) {
  @include businessOnly() {
    &::after {
      content: '';
      position: absolute;
      height: toPx($optionSelectedBarHeight);
      width: toPx($optionSelectedBarWidth);

      left: 0;
      top: toPx($optionSelectedBarTop);

      background-color: $color;
    }
  }
}

@mixin optionText() {
  display: inline-block;
  flex-grow: 1;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin optionBase($selectMode: false) {
  @include ellipsis;

  position: relative;
  display: block;
  text-decoration: none;
  padding: toPx(4) $autocompletePaddingX;
  text-align: left;
  max-width: 100%;
  cursor: pointer;
  outline: 0;

  @if $selectMode == true {
    cursor: default;
    color: $sbbColorGrey;

    @include businessOnly() {
      color: $sbbColorGranite;
    }
  }

  &:first-of-type {
    padding-top: $autocompletePaddingTop;
  }
  &:last-of-type {
    padding-bottom: $dropdownPaddingBottom;
  }

  @include businessOnly() {
    line-height: pxToRem(20);
  }

  @include publicOnly() {
    @include mq($from: desktop4k) {
      font-size: toPx($sizeFontDefault * $scalingFactor4k);
      padding: toPx(4 * $scalingFactor4k) toPx($autocompletePaddingX * $scalingFactor4k);

      &:first-of-type {
        padding-top: toPx($autocompletePaddingTop * $scalingFactor4k);
      }

      &:last-of-type {
        padding-bottom: toPx($dropdownPaddingBottom * $scalingFactor4k);
      }
    }
    @include mq($from: desktop5k) {
      font-size: toPx($sizeFontDefault * $scalingFactor5k);
      padding: toPx(4 * $scalingFactor5k) toPx($autocompletePaddingX * $scalingFactor5k);
      &:first-of-type {
        padding-top: toPx($autocompletePaddingTop * $scalingFactor5k);
      }
      &:last-of-type {
        padding-bottom: toPx($dropdownPaddingBottom * $scalingFactor5k);
      }
    }
  }

  &:not(.sbb-active) strong {
    color: $autocompleteHoverColor;
  }

  &.sbb-selected {
    color: $sbbColorBlack;
  }

  &.sbb-active {
    color: $autocompleteOptionActiveColor;

    &:not(.sbb-option-multiple) {
      @include optionBorderLeft($autocompleteOptionActiveColor);
    }
  }

  &:hover,
  &:focus,
  &:hover strong,
  &:focus strong {
    color: $autocompleteOptionHoverColor;

    &,
    &:not(.sbb-option-multiple) {
      @include optionBorderLeft($autocompleteOptionHoverColor);
    }
  }

  &:first-of-type:hover,
  &:first-of-type,
  &:first-of-type.sbb-active {
    &::after {
      top: toPx($optionSelectedBarTopFirst);
    }
  }

  .sbb-option-text {
    @include optionText();
  }
}
