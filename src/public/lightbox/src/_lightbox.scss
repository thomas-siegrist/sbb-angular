@import '../../../angular-core/styles/common/variants';
@import '../../../angular-core/styles/common/colors';
@import '../../../angular-core/styles/common/functions';
@import '../../../angular-core/styles/common/mediaqueries';
@import '../../../angular-core/styles/common/mixins';
@import '../../../angular-core/styles/common/button';

$lightbox-bgcolor: $sbbColorWhite;

$lightbox-header-height: 64;
$lightbox-header-y-padding: 20;
$lightbox-header-x-padding-mobile: 20;
$lightbox-header-x-padding-tablet: 24;
$lightbox-header-x-padding: 60;
$lightbox-header-border-color: $sbbColorCloud;

$lightbox-content-y-padding-mobile: 36;
$lightbox-content-y-padding: 48;
$lightbox-content-x-padding-mobile: 20;
$lightbox-content-x-padding-tablet: 24;
$lightbox-content-x-padding: 60;

$lighbox-close-button-size: 24;
$lighbox-close-icon-size: 16;
$lighbox-close-button-color: $sbbColorStorm;
$lighbox-close-button-color-hover: $sbbColorRed125;
$lighbox-close-icon-color: $sbbColorGrey;

$lightbox-footer-height-mobile: 168;
$lightbox-footer-height-tablet: 96;
$lightbox-footer-padding: 24;

@function getContentMaxHeightOffset($mode, $viewport: mobile) {
  @if ($viewport == mobile) and ($mode == withHeaderAndFooter) {
    @return $lightbox-header-height + $lightbox-footer-height-mobile;
  } @else if ($viewport == tabletPortrait) and ($mode == withHeaderAndFooter) {
    @return $lightbox-header-height + $lightbox-footer-height-tablet;
  } @else if ($viewport == mobile) and ($mode == withHeader) {
    @return $lightbox-header-height;
  } @else if ($viewport == mobile) and ($mode == withFooter) {
    @return $lightbox-footer-height-mobile;
  } @else if ($viewport == tabletPortrait) and ($mode == withFooter) {
    @return $lightbox-footer-height-tablet;
  }
}

@mixin lightboxContainer() {
  background-color: $lightbox-bgcolor;
  display: block;
  position: relative;
  outline: 0;
  width: 100%;
  height: 100%;

  @include mq($from: desktop4k) {
    font-size: toEm(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: toEm(1 * $scalingFactor5k);
  }
}

@mixin lightboxHeader() {
  display: flex;
  align-items: center;
  height: pxToEm($lightbox-header-height);
  padding: pxToEm($lightbox-header-y-padding) pxToEm($lightbox-header-x-padding-mobile);
  border-bottom: 1px solid $lightbox-header-border-color;
  overflow: hidden;

  @include mq($from: tabletPortrait) {
    padding: pxToEm($lightbox-header-y-padding) pxToEm($lightbox-header-x-padding-tablet);
  }

  @include mq($from: desktop) {
    padding: pxToEm($lightbox-header-y-padding) pxToEm($lightbox-header-x-padding);
  }

  @include mq($from: desktop4k) {
    border-bottom-width: toPx(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    border-bottom-width: toPx(1 * $scalingFactor5k);
  }
}

@mixin lightboxCloseBtn() {
  @include buttonResetFrameless();
  @include svgIconColor($lighbox-close-icon-color);

  margin-left: auto;
  position: relative;
  width: pxToEm($lighbox-close-button-size);
  height: pxToEm($lighbox-close-button-size);

  &::before {
    content: '';
    position: absolute;
    display: block;
    border: 1px solid $lighbox-close-button-color;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    top: 0;
    left: 0;
    transition: border 0.3s;
  }

  svg {
    @include absoluteCenterXY();

    width: pxToEm($lighbox-close-icon-size);
    height: pxToEm($lighbox-close-icon-size);
  }

  &:hover,
  &:focus {
    @include svgIconColor($lighbox-close-button-color-hover);
    cursor: pointer;

    &::before {
      border-color: $lighbox-close-button-color-hover;
    }
  }
}

@mixin lightboxContentHeight($mode: default) {
  @if ($mode == default) {
    max-height: 100vh;
  } @else if ($mode == withHeader) {
    max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset(withHeader))});
  } @else {
    max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset($mode, mobile))});

    @include mq($from: tabletPortrait) {
      max-height: calc(100vh - #{pxToEm(getContentMaxHeightOffset($mode, tabletPortrait))});
    }
  }
}

@mixin lightboxContent() {
  display: block;
  overflow: auto;
  padding: pxToEm($lightbox-content-y-padding-mobile) pxToEm($lightbox-content-x-padding-mobile);

  @include mq($from: tabletPortrait) {
    padding: pxToEm($lightbox-content-y-padding) pxToEm($lightbox-content-x-padding-tablet);
  }

  @include mq($from: desktop) {
    padding: pxToEm($lightbox-content-y-padding) pxToEm($lightbox-content-x-padding);
  }
}

@mixin lightboxFooter() {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  max-height: pxToEm($lightbox-footer-height-mobile + 2);
  background-color: $lightbox-bgcolor;
  border-top: 1px solid $lightbox-header-border-color;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: pxToEm($lightbox-footer-height-mobile);
  padding: pxToEm($lightbox-footer-padding) pxToEm($lightbox-header-x-padding-mobile);

  @include mq($from: tabletPortrait) {
    max-height: pxToEm($lightbox-footer-height-tablet + 2);
    flex-direction: row;
    min-height: pxToEm($lightbox-footer-height-tablet);
    padding: pxToEm($lightbox-footer-padding) pxToEm($lightbox-header-x-padding-tablet);
  }

  @include mq($from: desktop) {
    padding: pxToEm($lightbox-footer-padding) pxToEm($lightbox-header-x-padding);
  }

  @include mq($from: desktop4k) {
    border-top-width: toPx(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    border-top-width: toPx(1 * $scalingFactor5k);
  }

  button {
    margin-bottom: pxToEm(10);

    @include mq($from: tabletPortrait) {
      margin-bottom: 0;
    }
  }

  &-align-start {
    justify-content: flex-start;

    button {
      @include mq($from: tabletPortrait) {
        margin-right: pxToEm(10);
      }
    }
  }

  &-align-end {
    justify-content: flex-end;

    button {
      @include mq($from: tabletPortrait) {
        margin-left: pxToEm(10);
      }
    }
  }

  &-align-center {
    justify-content: space-around;
  }
}

@mixin lightboxTitle() {
  text-align: center;
  font-size: 28px;
  font-family: $fontSbbThin;
  margin-top: toPx(48 - $lightbox-content-y-padding-mobile);
  margin-bottom: 36px;

  @include mq($from: tabletPortrait) {
    font-size: 30px;
    margin-top: toPx(80 - $lightbox-content-y-padding);
    margin-bottom: 48px;
  }

  @include mq($from: desktop) {
    font-size: 40px;
  }

  @include mq($from: desktop4k) {
    font-size: toEm(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: toEm(1 * $scalingFactor5k);
  }
}
