@mixin search {
  display: block;
  position: relative;
  height: toPx($searchHeight);

  @include mq($from: mobilePortrait) {
    width: toPx($searchWidthMobile);
  }

  @include mq($from: tabletPortrait, $to: desktop4k) {
    width: toPx($searchWidth);
  }

  @include mq($from: desktop4k) {
    width: toPx($searchWidth * $scalingFactor4k);
    height: toPx($searchHeight * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    width: toPx($searchWidth * $scalingFactor5k);
    height: toPx($searchHeight * $scalingFactor5k);
  }

  .sbb-search-box {
    display: none;
    height: 100%;
    width: 0;
    &-visible {
      width: 100%;
      display: flex;
    }
    > input {
      border-right: none;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;

      @include mq($from: mobilePortrait) {
        width: toPx($searchInputWidthMobile);
      }

      @include mq($from: tabletPortrait, $to: desktop4k) {
        width: toPx($searchInputWidth);
      }

      @include mq($from: desktop4k) {
        width: toPx($searchInputWidth * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        width: toPx($searchInputWidth * $scalingFactor5k);
      }
    }
    > button {
      @include buttonResetFrameless;
      @include svgIconColor($sbbColorWhite);
      background-color: $sbbColorRed;
      border-radius: 0 2px 2px 0;
      width: toPx($searchButtonWidth);

      @include mq($from: desktop4k) {
        width: toPx($searchButtonWidth * $scalingFactor4k);
        border-top-right-radius: toPx(2 * $scalingFactor4k);
        border-bottom-right-radius: toPx(2 * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        width: toPx($searchButtonWidth * $scalingFactor5k);
        border-top-right-radius: toPx(2 * $scalingFactor5k);
        border-bottom-right-radius: toPx(2 * $scalingFactor5k);
      }

      position: relative;
      > .sbb-icon-component {
        @include absoluteCenterXY;
        width: toPx($searchIconWidthHeight);
        height: toPx($searchIconWidthHeight);
        @include mq($from: desktop4k) {
          width: toPx($searchIconWidthHeight * $scalingFactor4k);
          height: toPx($searchIconWidthHeight * $scalingFactor4k);
        }

        @include mq($from: desktop5k) {
          width: toPx($searchIconWidthHeight * $scalingFactor5k);
          height: toPx($searchIconWidthHeight * $scalingFactor5k);
        }
      }

      &.sbb-search-box-button-active {
        border: 2px solid $sbbColorGrey;
        border-left: none;

        @include mq($from: desktop4k) {
          border-width: toPx(2 * $scalingFactor4k);
        }

        @include mq($from: desktop5k) {
          border-width: toPx(2 * $scalingFactor5k);
        }
        > .sbb-icon-component {
          left: calc(50% + 1px);
        }
      }
    }
  }
}

@mixin searchIconWrapper {
  @include buttonResetFrameless;
  @include svgIconColor($sbbColorGrey);
  cursor: pointer;
  color: $sbbColorGrey;
  @include mq($from: desktop4k) {
    font-size: toPx($sizeFontBase * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: toPx($sizeFontBase * $scalingFactor5k);
  }
  display: none;
  height: 100%;
  &-label {
    position: relative;
  }
  &-visible {
    display: flex;
    align-items: center;
  }
  &:hover,
  &:focus {
    @include svgIconColor($sbbColorRed125);
    color: $sbbColorRed125;
  }
  .sbb-svgsprite-icon {
    position: relative;
    width: toPx($searchIconWidthHeight);
    height: toPx($searchIconWidthHeight);
    @include mq($from: desktop4k) {
      width: toPx($searchIconWidthHeight * $scalingFactor4k);
      height: toPx($searchIconWidthHeight * $scalingFactor4k);
    }

    @include mq($from: desktop5k) {
      width: toPx($searchIconWidthHeight * $scalingFactor5k);
      height: toPx($searchIconWidthHeight * $scalingFactor5k);
    }
    backface-visibility: hidden;
    pointer-events: none;
    margin-right: toPx($iconWrapperMargin);
  }
}
