// ----------------------------------------------------------------------------------------------------
// Mixins
// ----------------------------------------------------------------------------------------------------

@import './colors';
@import './variables';
@import './functions';
@import './mediaqueries';

/**
 * Contain floats with clearfix
 *
 * http://nicolasgallagher.com/micro-clearfix-hack/
 */

@mixin clearfix() {
  *zoom: 1;

  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

/**
 * Lists with layout purpose
 */

@mixin resetList() {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: inherit;
}

/**
 * Replace text
 */

@mixin replaceText() {
  display: block;
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

/**
 * Better font rendering (on OS X)
 * http://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 *
 * Usage:
 *
 * .var-dark-on-light {
 * 	@include fontSmoothing;
 * }
 * .var-light-on-dark {
 * 	@include fontSmoothingReset;
 * }
 */

@mixin fontSmoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin fontSmoothingReset() {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
}

/**
 * Placeholder in input fields
 */
@mixin placeholder($color: $sbbColorGrey) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    // Firefox 19+
    color: $color;
    opacity: 1;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}

// Typo Styles
// ----------------------------------------------------------------------------------------------------
@mixin headline1 {
  font-family: $fontSbbThin;
  font-weight: normal;
  font-size: pxToRem($sizeFontH1Mobile);
  line-height: 1.4;
  margin: 2em 0 0;

  @include mq($from: tabletPortrait) {
    line-height: 1.2;
    font-size: pxToRem($sizeFontH1Tablet);
  }

  @include mq($from: desktop) {
    font-size: pxToRem($sizeFontH1Default);
  }

  @include mq($from: desktop4k) {
    font-size: pxToRem($sizeFontH1Default4k); /* Factor 1.5 of Desktop */
  }

  @include mq($from: desktop5k) {
    font-size: pxToRem($sizeFontH1Default5k); /* Factor 2 of Desktop */
  }
}

@mixin headline2 {
  font-family: $fontSbbLight;
  font-weight: normal;
  font-size: pxToRem(24px);
  line-height: 1.2;
  margin: innerComponentSpacing(24) 0 0;

  @include mq($from: tabletPortrait) {
    font-size: pxToRem(26px);
  }

  @include mq($from: desktop) {
    font-size: pxToRem($sizeFontH2Default);
  }

  @include mq($from: desktop4k) {
    font-size: pxToRem($sizeFontH2Default4k); /* Factor 1.5 of Desktop */
    font-family: $fontSbbThin;
  }

  @include mq($from: desktop5k) {
    font-size: pxToRem($sizeFontH2Default5k); /* Factor 2 of Desktop */
    font-family: $fontSbbThin;
  }
}

@mixin headline3 {
  font-family: $fontSbbLight;
  font-weight: normal;
  font-size: pxToRem(20px);
  line-height: 1.4;
  margin: 2em 0 0;

  @include mq($from: tabletPortrait) {
    font-size: pxToRem($sizeFontH3Default);
  }

  @include mq($from: desktop) {
    font-size: pxToEm($sizeFontH3Default);
  }

  @include mq($from: desktop4k) {
    font-family: $fontSbbThin;
  }
}

@mixin headline4 {
  font-family: $fontSbbBold;
  font-weight: normal;
  font-size: pxToRem($sizeFontH4Default);
  line-height: 1.5;
  margin: 2em 0 0;

  @include mq($from: tabletPortrait) {
    font-size: pxToRem($sizeFontH4Default);
  }

  @include mq($from: desktop) {
    font-size: pxToEm($sizeFontH4Default);
  }

  @include mq($from: desktop4k) {
    font-family: $fontSbbRoman;
  }
}

@mixin lead {
  font-family: $fontSbbLight;
  font-weight: normal;
  color: $sbbColorText;
  font-size: pxToRem(20px);
  line-height: 1.3;
  margin: 2em 0 0;

  @include mq($from: tabletPortrait) {
    font-size: pxToRem(21px);
  }

  @include mq($from: desktop) {
    font-size: pxToEm(21px);
  }
}

@mixin copy {
  font-size: pxToRem($sizeFontDefault);
  line-height: 1.7;
  margin: 1em 0 0; // paragraph as default

  @include mq($from: tabletPortrait) {
    font-size: pxToRem($sizeFontDefault);
  }

  @include mq($from: desktop) {
    font-size: pxToRem($sizeFontDefault);
  }

  @include mq($from: desktop4k) {
    font-size: pxToRem($sizeFontDefault4k);
  }

  @include mq($from: desktop5k) {
    font-size: pxToRem($sizeFontDefault5k);
  }
}

@mixin inlinelinks {
  a {
    color: $sbbColorText;
    text-decoration: underline;

    &:hover,
    &:focus {
      color: $sbbColorCallToActionHover;
    }
  }
}

@mixin lists {
  ul,
  ol {
    font-size: pxToEm($sizeFontDefault);
    margin-left: pxToEm(8);
    margin-top: pxToEm(17);
    margin-bottom: pxToEm(30);

    @include mq($from: desktop) {
      margin-top: pxToEm(25);
    }

    li {
      margin-top: pxToEm(8);
    }
  }

  ul {
    list-style-type: disc;
    padding-left: pxToEm(16);
  }

  ul li {
    padding-left: pxToEm(16 - 6);
  }

  ol {
    list-style-type: none;
    counter-reset: item;
    padding-left: 0;

    > li {
      display: table;
      padding-left: 0;
    }

    > li:before {
      content: counters(item, '.') '.';
      counter-increment: item;

      display: table-cell;
      padding-right: pxToEm(13, $sizeFontDefault);
    }
  }

  ol ol,
  ol ul,
  ul ul,
  ul ol {
    margin: pxToEm(6) 0 0 pxToEm(8);
  }

  // if ol is nested inside ul, we need just 1 hierarchy level for the counter
  ul li ol > li:before {
    content: counter(item) '.';
  }
}

@mixin breakOutOfCenterAndGoFullBleed() {
  // https://cloudfour.com/thinks/breaking-out-with-viewport-units-and-calc/
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
}

// Centered tab module
@mixin centeredTabModule() {
  display: flex;
  justify-content: center;
}

@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin inlineSVG() {
  float: none;
  display: inline-block;
  width: pxToEm(16, $sizeFontDefault);
  height: pxToEm(16, $sizeFontDefault);
  margin-bottom: pxToEm(-4, $sizeFontDefault);
  border-radius: 1px;
}

@mixin absoluteCenterXY() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absoluteCenterX() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin absoluteCenterY() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin setFullBleed($offset) {
  margin-left: -$offset;
  margin-right: -$offset;
}

// Section (Fieldset)
// ----------------------------------------------------------------------------------------------------

@mixin fieldset {
  margin: 0;
  padding: pxToEm(36) pxToEm(24);
  border: 1px solid $sbbColorSilver;
  min-width: 0;

  @include mq($from: tabletPortrait) {
    padding: pxToEm(48) pxToEm(24);
  }

  @include mq($from: desktop4k) {
    font-size: pxToEm($sizeFontBase * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: pxToEm($sizeFontBase * $scalingFactor5k);
  }

  > legend {
    display: block;
    width: 100%;
    max-width: 100%;
    padding: 0;
    margin: 0 0 24px;
    font-family: $fontSbbLight;
    font-weight: 400;
    font-size: 24px;
    line-height: 1.2;
    float: left;

    @include mq($from: desktop) {
      font-size: 32px;
    }

    @include mq($from: desktop4k) {
      font-size: 48px;
      margin: 0 0 36px;
    }

    @include mq($from: desktop5k) {
      font-size: 64px;
      margin: 0 0 48px;
    }
  }

  fieldset {
    border-top: none;
    border-right: none;
    border-left: none;
    padding-left: 0;
    padding-right: 0;

    &:last-of-type {
      border-bottom: none;
    }

    > legend {
      font-size: 20px;

      @include mq($from: desktop) {
        font-size: 22px;
      }

      @include mq($from: desktop4k) {
        font-size: 32px;
      }

      @include mq($from: desktop5k) {
        font-size: 42px;
      }
    }
  }
}

@mixin baseBadgePill() {
  min-width: pxToEm(18, 11);
  border-radius: pxToEm(15, 11);
  padding: pxToEm(3, 11) pxToEm(5, 11) pxToEm(4, 11);
  background-color: $sbbColorMetal;
  color: $sbbColorWhite;
  font-family: $fontSbbBold;
  line-height: 1.1;
  font-size: pxToRem(11);
  text-align: center;
  height: pxToEm(18, 11);

  @include mq($from: desktop4k) {
    font-size: pxToRem(17);
  }

  @include mq($from: desktop5k) {
    font-size: pxToRem(22);
  }
}

@mixin svgIconColor($color) {
  svg.sbb-svg-icon {
    fill: $color;

    & > path {
      &[fill='none'] {
        stroke: $color;
      }

      &:not([fill]) {
        fill: $color;
      }
    }
  }
}
